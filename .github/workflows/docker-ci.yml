name: CI - Selenium TestNG with Docker (Allure Report)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  selenium-tests:
    runs-on: ubuntu-latest

    env:
      TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
      TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}

    steps:
      # 1️⃣ Checkout your repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Start Selenium Standalone Chrome in the background
      - name: Start Selenium Standalone Chrome
        run: |
          docker run -d -p 4444:4444 --name selenium \
            selenium/standalone-chrome:latest
          sleep 10
          docker ps -a

      # 3️⃣ Run Maven tests inside a Maven container
      - name: Run Maven tests in Docker
        run: |
          docker run --rm \
            --network host \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            maven:3.9.6-eclipse-temurin-11 \
            mvn clean test -Dsurefire.useFile=false
        env:
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}

      # 4️⃣ Generate Allure HTML report
      - name: Generate Allure Report
        run: |
          sudo apt-get update && sudo apt-get install -y npm
          sudo npm install -g allure-commandline --save-dev
          allure generate --clean allure-results -o allure-report || true

      # 5️⃣ Upload Allure HTML report as artifact
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/


      # 7️⃣ Stop and clean up Selenium container
      - name: Stop Selenium container
        if: always()
        run: docker rm -f selenium || true
      - name: Stop Selenium container
        if: always()
        run: docker rm -f selenium || true
